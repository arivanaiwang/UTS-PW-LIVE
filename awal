1. Instalasi dan Persiapan

Jalankan perintah berikut di terminal untuk menginstal semua dependensi:

# Inisialisasi proyek Node.js
npm init -y

# Instal dependensi yang diperlukan
npm install express express-session mysql2 bcrypt body-parser dotenv


---

2. Struktur Proyek

Buat struktur file berikut:

|-- project-folder
    |-- app.js
    |-- .env
    |-- views
        |-- index.html
        |-- login.html
        |-- register.html
        |-- dashboard.html
    |-- public
        |-- style.css
    |-- config.js


---

3. Kode untuk File Konfigurasi (config.js)

const mysql = require('mysql2');
require('dotenv').config();

const connection = mysql.createConnection({
  host: process.env.DB_HOST,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME
});

connection.connect((err) => {
  if (err) throw err;
  console.log('Terhubung ke database!');
});

module.exports = connection;

4. Kode untuk File Utama (app.js)

const express = require('express');
const session = require('express-session');
const bcrypt = require('bcrypt');
const bodyParser = require('body-parser');
const connection = require('./config');

const app = express();
app.use(express.static('public'));
app.use(bodyParser.urlencoded({ extended: false }));
app.use(session({
  secret: 'your-secret-key',
  resave: false,
  saveUninitialized: true
}));

// Middleware untuk mengecek sesi
function authMiddleware(req, res, next) {
  if (req.session.user) {
    next();
  } else {
    res.redirect('/login');
  }
}

// Halaman Landing Page
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/views/index.html');
});

// Halaman Login
app.get('/login', (req, res) => {
  res.sendFile(__dirname + '/views/login.html');
});

app.post('/login', (req, res) => {
  const { username, password } = req.body;
  connection.query('SELECT * FROM users WHERE username = ?', [username], async (err, results) => {
    if (err) throw err;
    if (results.length > 0) {
      const match = await bcrypt.compare(password, results[0].password);
      if (match) {
        req.session.user = username;
        res.redirect('/dashboard');
      } else {
        res.send('Password salah');
      }
    } else {
      res.send('User tidak ditemukan');
    }
  });
});

// Halaman Registrasi
app.get('/register', (req, res) => {
  res.sendFile(__dirname + '/views/register.html');
});

app.post('/register', async (req, res) => {
  const { username, password } = req.body;
  const hashedPassword = await bcrypt.hash(password, 10);
  connection.query('INSERT INTO users (username, password) VALUES (?, ?)', [username, hashedPassword], (err, results) => {
    if (err) throw err;
    res.send('Registrasi berhasil! Silakan login.');
  });
});

// Halaman Dashboard
app.get('/dashboard', authMiddleware, (req, res) => {
  res.sendFile(__dirname + '/views/dashboard.html');
});

// Logout
app.get('/logout', (req, res) => {
  req.session.destroy();
  res.redirect('/');
});

// CRUD untuk data nelayan
app.post('/create', authMiddleware, (req, res) => {
  const { nama_nelayan, hasil_tangkapan, stok_ikan } = req.body;
  connection.query('INSERT INTO nelayan (nama, hasil_tangkapan, stok_ikan) VALUES (?, ?, ?)', [nama_nelayan, hasil_tangkapan, stok_ikan], (err, results) => {
    if (err) throw err;
    res.send('Data berhasil ditambahkan');
  });
});

app.get('/read', authMiddleware, (req, res) => {
  connection.query('SELECT * FROM nelayan', (err, results) => {
    if (err) throw err;
    res.json(results);
  });
});

app.put('/update/:id', authMiddleware, (req, res) => {
  const { id } = req.params;
  const { hasil_tangkapan, stok_ikan } = req.body;
  connection.query('UPDATE nelayan SET hasil_tangkapan = ?, stok_ikan = ? WHERE id = ?', [hasil_tangkapan, stok_ikan, id], (err, results) => {
    if (err) throw err;
    res.send('Data berhasil diupdate');
  });
});

app.delete('/delete/:id', authMiddleware, (req, res) => {
  const { id } = req.params;
  connection.query('DELETE FROM nelayan WHERE id = ?', [id], (err, results) => {
    if (err) throw err;
    res.send('Data berhasil dihapus');
  });
});

app.listen(3000, () => console.log('Server berjalan di http://localhost:3000'));


---

5. File HTML untuk Tampilan

views/index.html (Landing Page)

<!DOCTYPE html>
<html>
<head>
  <title>Selamat Datang di Samudera Sejahtera</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <h1>Selamat Datang di Samudera Sejahtera</h1>
  <a href="/login">Login</a> | <a href="/register">Daftar</a>
</body>
</html>

views/login.html

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>
  <h1>Login</h1>
  <form action="/login" method="post">
    <input type="text" name="username" placeholder="Username" required><br>
    <input type="password" name="password" placeholder="Password" required><br>
    <button type="submit">Login</button>
  </form>
</body>
</html>

views/register.html

<!DOCTYPE html>
<html>
<head>
  <title>Registrasi</title>
</head>
<body>
  <h1>Registrasi</h1>
  <form action="/register" method="post">
    <input type="text" name="username" placeholder="Username" required><br>
    <input type="password" name="password" placeholder="Password" required><br>
    <button type="submit">Daftar</button>
  </form>
</body>
</html>

views/dashboard.html

<!DOCTYPE html>
<html>
<head>
  <title>Dashboard</title>
</head>
<body>
  <h1>Dashboard</h1>
  <a href="/logout">Logout</a>
</body>
</html>



---

6. File CSS untuk Tampilan (public/style.css)

body {
  font-family: Arial, sans-serif;
  text-align: center;
  margin-top: 50px;
}


---

7. File .env untuk Konfigurasi Koneksi Basis Data

DB_HOST=localhost
DB_USER=root
DB_PASSWORD=yourpassword
DB_NAME=samudera_sejahtera


---

8. SQL untuk Membuat Basis Data dan Tabel

CREATE DATABASE samudera_sejahtera;

USE samudera_sejahtera;

CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL
);

CREATE TABLE nelayan (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nama VARCHAR(255) NOT NULL,
  hasil_tangkapan INT NOT NULL,
  stok_ikan INT NOT NULL
);


---

Cara Mengimpor Basis Data

1. Masuk ke MySQL di terminal:

mysql -u root -p


2. Jalankan perintah SQL di atas untuk membuat database dan tabel.




---

Semoga ini membantu! Beri tahu teh jika ada bagian yang perlu diperjelas atauÂ disesuaikan!
